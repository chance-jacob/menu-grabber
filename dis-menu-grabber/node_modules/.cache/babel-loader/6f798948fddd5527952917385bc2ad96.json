{"ast":null,"code":"var _jsxFileName = \"/Users/chancejacob/Desktop/menu-grabber/dis-menu-grabber/src/components/displayedMenu.js\";\nimport React, { Component } from \"react\";\n\nfunction convertToDictionary(menuArray) {\n  let i = 0;\n  let d = {};\n  let keyPointer = \" \";\n\n  while (i < menuArray.length) {\n    let currentKey = menuArray[i][0];\n\n    if (currentKey != keyPointer) {\n      keyPointer = currentKey;\n      let tempArray = [];\n\n      if (menuArray[i].length == 4) {\n        tempArray.push(menuArray[i][1]);\n        tempArray.push(menuArray[i][2]);\n        tempArray.push(menuArray[i][3]);\n      }\n\n      if (menuArray[i].length == 3) {\n        tempArray.push(menuArray[i][1]);\n        tempArray.push(menuArray[i][2]);\n      }\n\n      d[keyPointer] = [tempArray];\n    } else {\n      let tempArray = [];\n\n      if (menuArray[i].length == 4) {\n        tempArray.push(menuArray[i][1]);\n        tempArray.push(menuArray[i][2]);\n        tempArray.push(menuArray[i][3]);\n      }\n\n      if (menuArray[i].length == 3) {\n        tempArray.push(menuArray[i][1]);\n        tempArray.push(menuArray[i][2]);\n      }\n\n      d[keyPointer].push(tempArray);\n    }\n\n    i++;\n  }\n\n  return d;\n}\n\nfunction parseString(menuString) {\n  menuString = menuString.menu;\n  let menuArray = menuString.split(\"###\");\n  let sortedMenuArray = [];\n  let menuItems = [];\n  let i = 1;\n  let keyPointer = -1;\n\n  while (i < menuArray.length) {\n    let currentStr = menuArray[i];\n    let firstChar = currentStr[0];\n\n    if (firstChar === \" \") {\n      let getStr = menuArray[i];\n      let cleanStr = getStr.split(\"/n\");\n      let finalStr = cleanStr[0].trim();\n      sortedMenuArray.push(finalStr);\n      keyPointer += 1;\n    }\n\n    if (firstChar === \"#\") {\n      let dishInfo = [];\n      let currentKey = sortedMenuArray[keyPointer];\n      dishInfo.push(currentKey);\n      let getStr = menuArray[i];\n      let strArray = [];\n      strArray = getStr.split(\"\\n\\n\");\n      let dishName = strArray[0];\n      let dishNameArray = dishName.split(\"#\");\n      dishName = dishNameArray[1];\n      dishName = dishName.trim();\n      dishInfo.push(dishName);\n\n      if (strArray.length == 4) {\n        dishInfo.push(strArray[1]);\n        dishInfo.push(strArray[2]);\n      }\n\n      if (strArray.length == 3) {\n        dishInfo.push(strArray[1]);\n      }\n\n      menuItems.push(dishInfo);\n    }\n\n    i++;\n  }\n\n  menuItems = convertToDictionary(menuItems);\n  let menuByPair = Object.entries(menuItems);\n  return menuByPair; //formattedMenu;\n}\n\nclass displayedMenu extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  render() {\n    let menu = this.props.menu;\n    menu = parseString(menu);\n    menu = JSON.stringify(menu);\n    let catagoryName = menu.key[0];\n    console.log(menu);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Menu\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, menu));\n  }\n\n}\n\nexport default displayedMenu;","map":{"version":3,"sources":["/Users/chancejacob/Desktop/menu-grabber/dis-menu-grabber/src/components/displayedMenu.js"],"names":["React","Component","convertToDictionary","menuArray","i","d","keyPointer","length","currentKey","tempArray","push","parseString","menuString","menu","split","sortedMenuArray","menuItems","currentStr","firstChar","getStr","cleanStr","finalStr","trim","dishInfo","strArray","dishName","dishNameArray","menuByPair","Object","entries","displayedMenu","state","render","props","JSON","stringify","catagoryName","key","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nfunction convertToDictionary(menuArray) {\n  let i = 0;\n  let d = {};\n  let keyPointer = \" \";\n  while (i < menuArray.length) {\n    let currentKey = menuArray[i][0];\n    if (currentKey != keyPointer) {\n      keyPointer = currentKey;\n      let tempArray = [];\n      if (menuArray[i].length == 4) {\n        tempArray.push(menuArray[i][1]);\n        tempArray.push(menuArray[i][2]);\n        tempArray.push(menuArray[i][3]);\n      }\n      if (menuArray[i].length == 3) {\n        tempArray.push(menuArray[i][1]);\n        tempArray.push(menuArray[i][2]);\n      }\n      d[keyPointer] = [tempArray];\n    } else {\n      let tempArray = [];\n      if (menuArray[i].length == 4) {\n        tempArray.push(menuArray[i][1]);\n        tempArray.push(menuArray[i][2]);\n        tempArray.push(menuArray[i][3]);\n      }\n      if (menuArray[i].length == 3) {\n        tempArray.push(menuArray[i][1]);\n        tempArray.push(menuArray[i][2]);\n      }\n      d[keyPointer].push(tempArray);\n    }\n    i++;\n  }\n  return d;\n}\nfunction parseString(menuString) {\n  menuString = menuString.menu;\n\n  let menuArray = menuString.split(\"###\");\n  let sortedMenuArray = [];\n  let menuItems = [];\n  let i = 1;\n  let keyPointer = -1;\n\n  while (i < menuArray.length) {\n    let currentStr = menuArray[i];\n    let firstChar = currentStr[0];\n\n    if (firstChar === \" \") {\n      let getStr = menuArray[i];\n      let cleanStr = getStr.split(\"/n\");\n      let finalStr = cleanStr[0].trim();\n      sortedMenuArray.push(finalStr);\n      keyPointer += 1;\n    }\n\n    if (firstChar === \"#\") {\n      let dishInfo = [];\n      let currentKey = sortedMenuArray[keyPointer];\n      dishInfo.push(currentKey);\n      let getStr = menuArray[i];\n      let strArray = [];\n      strArray = getStr.split(\"\\n\\n\");\n      let dishName = strArray[0];\n      let dishNameArray = dishName.split(\"#\");\n      dishName = dishNameArray[1];\n      dishName = dishName.trim();\n      dishInfo.push(dishName);\n\n      if (strArray.length == 4) {\n        dishInfo.push(strArray[1]);\n        dishInfo.push(strArray[2]);\n      }\n      if (strArray.length == 3) {\n        dishInfo.push(strArray[1]);\n      }\n      menuItems.push(dishInfo);\n    }\n    i++;\n  }\n  menuItems = convertToDictionary(menuItems);\n  let menuByPair = Object.entries(menuItems);\n  return menuByPair; //formattedMenu;\n}\n\nclass displayedMenu extends Component {\n  state = {};\n\n  render() {\n    let menu = this.props.menu;\n    menu = parseString(menu);\n    menu = JSON.stringify(menu);\n\n    let catagoryName = menu.key[0];\n    console.log(menu);\n\n    return (\n      <div>\n        <p>Menu</p>\n        <p>{menu}</p>\n      </div>\n    );\n  }\n}\n\nexport default displayedMenu;\n"]},"metadata":{},"sourceType":"module"}